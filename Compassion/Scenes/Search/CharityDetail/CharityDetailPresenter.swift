//
//  CharityDetailPresenter.swift
//  Compassion
//
//  Created by Casper Daris on 24/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

//sourcery: AutoMockable
protocol CharityDetailPresenterProtocol {
    typealias CharityResponse = CharityDetail.Charity.Response
    typealias FavoriteResponse = CharityDetail.Favorite.Response
    typealias ReactionResponse = CharityDetail.Reaction.Response
    
    func set(viewController: CharityDetailViewControllerProtocol?)

    func presentCharityDetail(response: CharityResponse)
    func presentFavoriteTappedResult(response: FavoriteResponse)
    func presentFavoriteFetched(response: FavoriteResponse)
    func presentReactions(response: ReactionResponse)
}

class CharityDetailPresenter: CharityDetailPresenterProtocol {

    // MARK: - DI
    weak var viewController: CharityDetailViewControllerProtocol?

    func set(viewController: CharityDetailViewControllerProtocol?) {
        self.viewController = viewController
    }
}

// MARK: - Methods
extension  CharityDetailPresenter {

    func presentCharityDetail(response: CharityResponse) {
        viewController?.displayCharityDetail(viewModel: .init(logo: response.logo))
    }
    
    func presentFavoriteFetched(response: FavoriteResponse) {
        viewController?.displayFavoriteResult(viewModel: .init(message: response.message,
                                                               isNowFavorite: response.isNowFavorite))
    }
    
    func presentFavoriteTappedResult(response: FavoriteResponse) {
        viewController?.displayFavoriteResult(viewModel: .init(message: response.message,
                                                               isNowFavorite: response.isNowFavorite))
    }
    
    func presentReactions(response: ReactionResponse) {
        viewController?.displayReactions(viewModel: .init(reactions: response.reactions))
    }
}
