////
//  CharityDetailRouter.swift
//  Compassion
//
//  Created by Casper Daris on 24/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

//sourcery: AutoMockable
protocol CharityDetailRouterProtocol {
  func set(viewController: CharityDetailViewControllerProtocol?)
  func route(to scene: CharityDetailRouter.Scene)
}

class CharityDetailRouter: NSObject, CharityDetailRouterProtocol {

    //MARK: - DI
    weak var viewController: CharityDetailViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let searchStoryboard: Storyboard

    func set(viewController: CharityDetailViewControllerProtocol?) {
        self.viewController = viewController
    }

    init(rootNavigator: RootNavigatorProtocol,
         search: Storyboard) {
        self.rootNavigator = rootNavigator
        self.searchStoryboard = search
    }
}

// MARK: - Routing logic
extension CharityDetailRouter {

    enum Scene {
        case newReaction(charity: String)
    }

    func route(to scene: CharityDetailRouter.Scene) {
        switch scene {
        case .newReaction(let charity):
            guard let vc = searchStoryboard.viewController(identifier: SearchStoryboardId.newReaction) as? NewReactionViewController else {
                assertionFailure("Unable to instantiate new rewaction view")
                return
            }
            vc.set(charity: charity)
            vc.modalPresentationStyle = .overFullScreen
            vc.modalTransitionStyle = .crossDissolve
            viewController?.present(vc, animated: true, completion: nil)
        }
    }
}

