//
//  NewReactionInteractor.swift
//  Compassion
//
//  Created by Casper Daris on 09/05/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

//sourcery: AutoMockable
protocol NewReactionInteractorProtocol {
    typealias Request = NewReaction.NewReaction.Request
    
    func handleNewReactionDidLoad()
    func placeNewReaction(request: Request)
}

class NewReactionInteractor: NewReactionInteractorProtocol {

    // MARK: - DI
    private var presenter: NewReactionPresenterProtocol
    private var profileManager: ProfileManagerProtocol
    private var reactionService: ReactionServiceProtocol

    init(presenter: NewReactionPresenterProtocol,
         profileManager: ProfileManagerProtocol,
         reactionService: ReactionServiceProtocol) {
        self.presenter = presenter
        self.profileManager = profileManager
        self.reactionService = reactionService
    }
    
    func handleNewReactionDidLoad() {
        let user = profileManager.fetchProfile()
        presenter.presentNewReactionView(user: "\(user.firstName) \(user.lastName)")
    }
    
    func placeNewReaction(request: Request) {
        let user = profileManager.fetchProfile()
        let reactionToPlace = ReactionModel(userName: "\(user.firstName) \(user.lastName)",
                                            date: getToday(),
                                            reaction: request.reaction)
        reactionService.placeReaction(charity: request.charity,
                                      reaction: reactionToPlace) { (message, success) in
            self.presenter.presentPlaceNewReaction(response: .init(message: message, success: success))
        }
    }
    
    func getToday() -> String {
        let date = Date()
        let formatted = date.getFormattedDate(format: "dd MMM yyyy")
        return formatted
    }
}
