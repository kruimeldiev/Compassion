//
//  SearchViewController.swift
//  Compassion
//
//  Created by Casper Daris on 02/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit
import FirebaseAuth

protocol SearchViewControllerProtocol: UIViewController {
    typealias ViewModel = Search.LoadScene.ViewModel
    
    func set(interactor: SearchInteractorProtocol)
    func set(router: SearchRouterProtocol)

    func displaySearch(viewModel: ViewModel)
    func receiveFilters(city: String, sector: String)
}

class SearchViewController: UIViewController, SearchViewControllerProtocol {

    // MARK: - DI
    var interactor: SearchInteractorProtocol?
    var router: SearchRouterProtocol?
    var tableViewDataSource: SearchResultTableViewDataSource = .init()

    func set(interactor: SearchInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: SearchRouterProtocol) {
        self.router = router
    }
    
    // MARK: - Outlets
    @IBOutlet weak var firstNameLabel: UILabel!
    @IBOutlet weak var locationLabel: UILabel!
    @IBOutlet weak var filterButton: UIButton!
    @IBOutlet weak var searchButton: UIButton!
    @IBOutlet weak var searchTextField: UITextField!
    @IBOutlet weak var searchFieldCompleteView: UIView!
    @IBOutlet weak var searchResultTableView: UITableView!
    
    // MARK: - Properties

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        self.searchTextField.delegate = self
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
        navigationController?.navigationBar.prefersLargeTitles = true
        /// Fetch the initial charities
        interactor?.handleSearchDidLoad(request: .init(city: "", sector: "", limit: 100))
        self.searchResultTableView.delegate = self
        self.searchResultTableView.dataSource = tableViewDataSource
    }

    // MARK: - Actions
    @IBAction func filterButtonPressed(_ sender: Any) {
        router?.route(to: .filter)
    }
    
}

// MARK: - Methods
extension SearchViewController: UITextFieldDelegate {

    func displaySearch(viewModel: ViewModel) {
        searchFieldCompleteView.addShadowToView(color: .black, offset: .zero, opacity: 0.3, radius: 2)
        searchFieldCompleteView.layer.cornerRadius = 12
        filterButton.layer.cornerRadius = 12
        firstNameLabel.text = viewModel.userProfile.firstName
        tableViewDataSource.charitiesArray = viewModel.charities
        self.searchResultTableView.reloadData()
    }
    
    /// This function is called by the filter view
    func receiveFilters(city: String, sector: String) {
        /// Unwrapping the values
        let receivedCity = city
        let receivedSector = sector
        interactor?.handleSearchDidLoad(request: .init(city: receivedCity,
                                                       sector: receivedSector,
                                                       limit: 100))
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.view.endEditing(true)
        return false
    }
}

// MARK: - Table View Extension
extension SearchViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        router?.route(to: .detail(charity: tableViewDataSource.charitiesArray[indexPath.item]))
    }
}
