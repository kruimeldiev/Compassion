////
//  SearchRouter.swift
//  Compassion
//
//  Created by Casper Daris on 02/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol SearchRouterProtocol {
    func set(viewController: SearchViewControllerProtocol?)
    func route(to scene: SearchRouter.Scene)
}

class SearchRouter: NSObject, SearchRouterProtocol {
    
    //MARK: DI
    weak var viewController: SearchViewControllerProtocol?
    private let rootNavigator: RootNavigatorProtocol
    private let searchStoryboard: Storyboard
    
    func set(viewController: SearchViewControllerProtocol?) {
        self.viewController = viewController
    }
    
    init(rootNavigator: RootNavigatorProtocol,
         search: Storyboard) {
        self.rootNavigator = rootNavigator
        self.searchStoryboard = search
    }
}

// MARK: Routing logic
extension SearchRouter {
    
    enum Scene {
        case filter
        case detail(charity: CharityModel)
    }
    
    func route(to scene: SearchRouter.Scene) {
        switch scene {
            case .filter:
                guard let filterVc = searchStoryboard.viewController(identifier: SearchStoryboardId.filters) as? SearchFilterPopUpViewController else {
                    assertionFailure("Unable to instantiate filters view controller")
                    return
                }
                guard let searchVc = viewController else {
                    assertionFailure("Unable to DI Search VC into Filter VC")
                    return
                }
                filterVc.set(delegate: searchVc)
                filterVc.modalPresentationStyle = .popover
                viewController?.present(filterVc, animated: true, completion: nil)
            case .detail(let charity):
                guard let vc = searchStoryboard.viewController(identifier: SearchStoryboardId.detail) as? CharityDetailViewController else {
                    assertionFailure("Unable to instantiate charity details view controller")
                    return
                }
                vc.set(charity: charity)
                viewController?.show(vc, sender: nil)
        }
    }
}

