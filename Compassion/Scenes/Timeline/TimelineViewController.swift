//
//  TimelineViewController.swift
//  Compassion
//
//  Created by Casper Daris on 09/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol TimelineViewControllerProtocol: UIViewControllerRouting {
    typealias ViewModel = Timeline.Favorites.ViewModel
    
    func set(interactor: TimelineInteractorProtocol)
    func set(router: TimelineRouterProtocol)

    func displayTimeline(viewModel: ViewModel)
    func routeToCharityDetail(charity: CharityModel)
}

class TimelineViewController: UIViewController, TimelineViewControllerProtocol {

    // MARK: - DI
    var interactor: TimelineInteractorProtocol?
    var router: TimelineRouterProtocol?
    var tableViewDataSource: TimelineTableViewDataSource = .init()
    
    var refreshControl = UIRefreshControl()
    
    func set(interactor: TimelineInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: TimelineRouterProtocol) {
        self.router = router
    }
    
    // MARK: - Outlets
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Properties

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
        navigationController?.navigationBar.prefersLargeTitles = true
        interactor?.handleTimelineDidLoad()
        self.tableView.delegate = self
        self.tableView.dataSource = tableViewDataSource
        refreshControl.attributedTitle = NSAttributedString(string: "Opnieuw laden")
        refreshControl.addTarget(self, action: #selector(self.refresh(_:)), for: .valueChanged)
        self.tableView.addSubview(refreshControl)
    }

    // MARK: - Actions
    @objc func refresh(_ sender: AnyObject) {
        interactor?.handleTimelineDidLoad()
    }
}

// MARK: - Methods
extension TimelineViewController {

    func displayTimeline(viewModel: ViewModel) {
        tableViewDataSource.favoritesArray = viewModel.favorites
        self.tableView.reloadData()
        refreshControl.endRefreshing()
    }
}

extension TimelineViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        interactor?.handleCharityTapped(name: tableViewDataSource.favoritesArray[indexPath.row].name)
    }
    
    func routeToCharityDetail(charity: CharityModel) {
        router?.route(to: .detail(charity: charity))
    }
}
