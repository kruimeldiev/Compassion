//
//  TimelinePresenter.swift
//  Compassion
//
//  Created by Casper Daris on 09/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol TimelinePresenterProtocol {
    typealias Response = Timeline.Favorites.Response
    
    func set(viewController: TimelineViewControllerProtocol?)

    func presentTimeline(response: Response)
    func presentCharityDetail(charity: CharityModel)
}

class TimelinePresenter: TimelinePresenterProtocol {

    // MARK: - DI
    weak var viewController: TimelineViewControllerProtocol?

    func set(viewController: TimelineViewControllerProtocol?) {
        self.viewController = viewController
    }
}

// MARK: Methods
extension  TimelinePresenter {

    func presentTimeline(response: Response) {
        viewController?.displayTimeline(viewModel: .init(favorites: response.favorites))
    }
    
    func presentCharityDetail(charity: CharityModel) {
        viewController?.routeToCharityDetail(charity: charity)
    }
}
