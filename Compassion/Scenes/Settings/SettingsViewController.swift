//
//  SettingsViewController.swift
//  Compassion
//
//  Created by Casper Daris on 10/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol SettingsViewControllerProtocol: UIViewControllerRouting {
    func set(interactor: SettingsInteractorProtocol)
    func set(router: SettingsRouterProtocol)

    func displaySettings()
}

class SettingsViewController: UIViewController, SettingsViewControllerProtocol {

    // MARK: - DI
    var interactor: SettingsInteractorProtocol?
    var router: SettingsRouterProtocol?
    var tableViewDataSource: SettingsTableViewDataSource = .init()

    func set(interactor: SettingsInteractorProtocol) {
        self.interactor = interactor
    }

    func set(router: SettingsRouterProtocol) {
        self.router = router
    }
    

    // MARK: - Outlets
    @IBOutlet weak var settingsTableView: UITableView!
    
    // MARK: - Properties

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
        navigationController?.navigationBar.prefersLargeTitles = true
        self.settingsTableView.delegate = self
        self.settingsTableView.dataSource = tableViewDataSource
        interactor?.handleSettingsDidLoad()
    }

    // MARK: - Actions

}

// MARK: - Methods
extension SettingsViewController {

    func displaySettings() {
        print("Settings displayed")
    }
}

// MARK: - Table View Stuff
extension SettingsViewController: UITableViewDelegate {
    
    /// This function makes it posible to select a tableview row and set an action to follow
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        switch indexPath.section {
            case 0:
                switch indexPath.row {
                    case 0:
                        router?.route(to: .accountSettings)
                    default:
                        router?.route(to: .locationSettings)
                }
            case 1:
                switch indexPath.row {
                    case 0:
                        router?.route(to: .terms)
                    case 1:
                        router?.route(to: .privacy)
                    default:
                        router?.route(to: .aboutTheApp)
                }
            default:
                router?.route(to: .login)
        }
    }
    
    /// Set the custom view for the tableview headers
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        let headerView = UIView()
        headerView.backgroundColor = UIColor(named: "BackgroundGray")
        return headerView
    }
    
    /// Set the custom view for the tableview footers
    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {
        return UIView()
    }
}
