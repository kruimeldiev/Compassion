//
//  RegisterViewController.swift
//  Compassion
//
//  Created by Casper Daris on 02/04/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  This template is meant to work with Swinject.

import UIKit

protocol RegisterViewControllerProtocol: class, UIViewControllerRouting {
    typealias ViewModel = Register.User.ViewModel
    
    func set(interactor: RegisterInteractorProtocol)

    func displayRegister()
    func displayRegisterError(error: String)
    func registerNewUser()
}

class RegisterViewController: UIViewController, RegisterViewControllerProtocol {

    // MARK: - DI
    var interactor: RegisterInteractorProtocol?
    var keyboardObserver: KeyboardObserver?

    func set(interactor: RegisterInteractorProtocol) {
        self.interactor = interactor
    }

    // MARK: - Outlets
    @IBOutlet weak var emailInput: TextInputField!
    @IBOutlet weak var passwordInput: TextInputField!
    @IBOutlet weak var verifyPasswordInput: TextInputField!
    @IBOutlet weak var firstNameInput: TextInputField!
    @IBOutlet weak var secondNameInput: TextInputField!
    @IBOutlet weak var errorLabel: UILabel!
    @IBOutlet weak var registerButton: UIButton!

    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.handleRegisterDidLoad()
    }

    // MARK: - Actions
    @IBAction func registerButtonPressed(_ sender: Any) {
        errorLabel.text = ""
        interactor?.validateInputs(request: .init(email: emailInput.getContent(),
                                                  password: passwordInput.getContent(),
                                                  passwordVerify: verifyPasswordInput.getContent(),
                                                  firstName: firstNameInput.getContent(),
                                                  lastName: secondNameInput.getContent()))
    }
    
}

// MARK: - Methods
extension RegisterViewController {

    func displayRegister() {
        self.registerButton.addShadowToView(color: .black, offset: .zero, opacity: 0.3, radius: 2)
        self.emailInput.configure(type: .email, title: "E-mail", placeholder: "Vul je e-mailadres in", isMandatory: true)
        self.passwordInput.configure(type: .password, title: "Wachtwoord", placeholder: "Vul je wachtwoord in", isMandatory: true)
        self.verifyPasswordInput.configure(type: .password, title: "Herhaal wachtwoord", placeholder: "Herhaal het wachtwoord", isMandatory: true)
        self.firstNameInput.configure(type: .name, title: "Voornaam", placeholder: "Vul je voornaam in", isMandatory: true)
        self.secondNameInput.configure(type: .name, title: "Achternaam", placeholder: "Vul je achternaam in", isMandatory: true)
        self.errorLabel.isHidden = true
        setupKeyboardObserver()
    }
    
    func displayRegisterError(error: String) {
        self.errorLabel.isHidden = false
        self.errorLabel.textColor = UIColor(named: "ErrorRed")
        self.errorLabel.text = error
    }
    
    func registerNewUser() {
        self.errorLabel.isHidden = false
        self.errorLabel.textColor = UIColor(named: "GoodGreen")
        self.errorLabel.text = "Account succesvol aangemaakt"
    }
}

// MARK: - Keyboard Observer
extension RegisterViewController: KeyboardObserverProtocol {
    func setupKeyboardObserver() {
        keyboardObserver = .init(view: self.view)
        keyboardObserver?.hideKeyboardOnTap()
    }
}
